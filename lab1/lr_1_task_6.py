# -*- coding: utf-8 -*-
"""LR_1_task_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PJEW711MAOp2B9CAomeso3IXBJdX8ojR
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import classification_report
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
from utilities import visualize_classifier
from sklearn.metrics import roc_auc_score

# Завантаження та підготовка даних (припустимо, що дані розділені на X та y)
input_file = 'data_multivar_nb.txt'

data = np.loadtxt(input_file, delimiter=',')
X, y = data[:, :-1], data[:, -1]

# Розбиття на навчальний та тестовий набори
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=3)

# Ініціалізуємо модель SVM
svm_model = SVC(kernel='linear')  # Використовуємо лінійне ядро для спрощення прикладу

# Тренуємо модель на навчальних даних
svm_model.fit(X_train, y_train)

# Проводимо класифікацію на тестових даних
y_pred = svm_model.predict(X_test)

classification_rep = classification_report(y_test, y_pred)
# Обчислення якості класифікатора
accuracy = 100.0 * (y_test == y_pred).sum() / X_test.shape[0]
print("Accuracy of the new classifier =", round(accuracy, 2), "%")
# Виводимо результати
print("Classification Report:\n", classification_rep)
# Візуалізація роботи класифікатора
visualize_classifier(classifier_new, X_test, y_test)

# Розбиття на навчальний та тестовий набори
b_X_train, b_X_test, b_y_train, b_y_test = train_test_split(X, y, test_size=0.2, random_state=3)

# Ініціалізуємо модель Gaussian Naive Bayes
from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()

# Тренуємо модель на навчальних даних
classifier.fit(b_X_train, b_y_train)

# Проводимо класифікацію на тестових даних
b_y_pred = classifier.predict(b_X_test)

classification_rep = classification_report(b_y_test, b_y_pred)

# Обчислення якості класифікатора
accuracy = 100.0 * (b_y_test == b_y_pred).sum() / X_test.shape[0]
print("Accuracy of the new classifier =", round(accuracy, 2), "%")

# Виводимо результати
print("Classification Report:\n", classification_rep)
# Візуалізація роботи класифікатора
visualize_classifier(classifier_new, b_X_test, b_y_test)